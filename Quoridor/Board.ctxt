#BlueJ class context
comment0.params=
comment0.target=Board()
comment0.text=\r\n\ Constructor\ for\ Board\ class\r\n
comment1.params=
comment1.target=void\ initPlayers()
comment1.text=\r\n\ initPlayers\ -\ initializes\ players\r\n
comment10.params=player
comment10.target=boolean\ checkForWinner(Player)
comment10.text=\r\n\ checkForWinner\ -\ checks\ to\ see\ if\ we\ have\ a\ winner.\r\n
comment2.params=
comment2.target=void\ initGame()
comment2.text=\r\n\ initGame\ -\ initializes\ a\ game\ in\ the\ battle\r\n
comment3.params=
comment3.target=void\ initBattle()
comment3.text=\r\n\ initBattle\ -\ initiazlie\ the\ battle\r\n
comment4.params=
comment4.target=void\ setupBoard()
comment4.text=\r\n\ setupBoard\ -\ sets\ up\ game\ board\r\n
comment5.params=
comment5.target=void\ clearBoard()
comment5.text=\r\n\ clearBoard\ -\ initializes\ a\ game\ in\ the\ battle\r\n
comment6.params=
comment6.target=void\ act()
comment6.text=\r\n\ Act\ -\ do\ whatever\ the\ Game\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment7.params=me\ opponent
comment7.target=boolean\ movePlayer(Player,\ Player)
comment7.text=\r\n\ movePlayer\ -\ make\ a\ player\ move,\ checking\ for\ validity\r\n
comment8.params=newRow\ newCol\ me\ opponent
comment8.target=boolean\ step(int,\ int,\ Player,\ Player)
comment8.text=\r\n\ step\ -\ steps\ piece\ in\ the\ current\ direction.\r\n
comment9.params=row\ col\ orient\ me\ opponent
comment9.target=boolean\ addWall(int,\ int,\ int,\ Player,\ Player)
comment9.text=\r\n\ addWall\ -\ add\ a\ wall\ to\ our\ list\r\n
numComments=11
